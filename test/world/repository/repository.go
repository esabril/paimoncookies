// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/world/repository/repository.go

// Package world_repo is a generated GoMock package.
package world_repo

import (
	reflect "reflect"

	model "github.com/esabril/paimoncookies/internal/service/world/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIWorldRepo is a mock of IWorldRepo interface.
type MockIWorldRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIWorldRepoMockRecorder
}

// MockIWorldRepoMockRecorder is the mock recorder for MockIWorldRepo.
type MockIWorldRepoMockRecorder struct {
	mock *MockIWorldRepo
}

// NewMockIWorldRepo creates a new mock instance.
func NewMockIWorldRepo(ctrl *gomock.Controller) *MockIWorldRepo {
	mock := &MockIWorldRepo{ctrl: ctrl}
	mock.recorder = &MockIWorldRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWorldRepo) EXPECT() *MockIWorldRepoMockRecorder {
	return m.recorder
}

// GetRegions mocks base method.
func (m *MockIWorldRepo) GetRegions() ([]model.Region, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegions")
	ret0, _ := ret[0].([]model.Region)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegions indicates an expected call of GetRegions.
func (mr *MockIWorldRepoMockRecorder) GetRegions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegions", reflect.TypeOf((*MockIWorldRepo)(nil).GetRegions))
}

// GetWeekdayTalentBooksWithLocation mocks base method.
func (m *MockIWorldRepo) GetWeekdayTalentBooksWithLocation(weekday string) ([]model.TalentBook, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWeekdayTalentBooksWithLocation", weekday)
	ret0, _ := ret[0].([]model.TalentBook)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWeekdayTalentBooksWithLocation indicates an expected call of GetWeekdayTalentBooksWithLocation.
func (mr *MockIWorldRepoMockRecorder) GetWeekdayTalentBooksWithLocation(weekday interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWeekdayTalentBooksWithLocation", reflect.TypeOf((*MockIWorldRepo)(nil).GetWeekdayTalentBooksWithLocation), weekday)
}

// GetWeekdayWeaponMaterialsWithLocation mocks base method.
func (m *MockIWorldRepo) GetWeekdayWeaponMaterialsWithLocation(weekday string) ([]model.WeaponMaterial, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWeekdayWeaponMaterialsWithLocation", weekday)
	ret0, _ := ret[0].([]model.WeaponMaterial)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWeekdayWeaponMaterialsWithLocation indicates an expected call of GetWeekdayWeaponMaterialsWithLocation.
func (mr *MockIWorldRepoMockRecorder) GetWeekdayWeaponMaterialsWithLocation(weekday interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWeekdayWeaponMaterialsWithLocation", reflect.TypeOf((*MockIWorldRepo)(nil).GetWeekdayWeaponMaterialsWithLocation), weekday)
}
